#1. Выяснить тип результата выражений:

#15 * 3
a = 15 * 3
print(a)

#Выясним тип результата с помощью функции type
print(type(a))

#Выясним тип результата с помощью функции isinstance
print(isinstance(a,int))
print(isinstance(a,list))

print()

#15 / 3

b = 15 / 3
print(b)
#Выясним тип результата с помощью функции type
print(type(b))

#Выясним тип результата с помощью функции isinstance
print(isinstance(b,float))
print(isinstance(b,int))

print()

#15 // 2

c = 15 // 2
print(c)
#Выясним тип результата с помощью функции type
print(type(c))

#Выясним тип результата с помощью функции isinstance
print(isinstance(c, int))
print(isinstance(c,float))

print()

#15 ** 2

d = 15 ** 2
print(d)
#Выясним тип результата с помощью функции type
print(type(d))

#Выясним тип результата с помощью функции isinstance
print(isinstance(d, int))
print(isinstance(d, complex))



#2. Дан список:
"""['в', '5', 'часов', '17', 'минут', 'температура', 'воздуха', 'была', '+5', 'градусов']

Необходимо его обработать — обособить каждое целое число (вещественные не трогаем) кавычками (добавить кавычку до и кавычку после элемента списка, являющегося числом) и дополнить нулём до двух целочисленных разрядов:
['в', '"', '05', '"', 'часов', '"', '17', '"', 'минут', 'температура', 'воздуха', 'была', '"', '+05', '"', 'градусов']
"""

initial_list = ['в', '5', 'часов', '17', 'минут',
              'температура', 'воздуха', 'была', '+5', 'градусов']
length_of_list: int = len(initial_list)


for _ in range(length_of_list): 

    elem = initial_list.pop(0)

 
    if  elem.isdigit() and elem.isalnum():
        initial_list.append(f'"{int(elem):02d}"')
   

    elif elem[0] == "+" and elem[1].isdigit():
        initial_list.append(f'"+{int(elem):02d}"')
  

    else:
        initial_list.append(elem)

print(' '.join(initial_list))



#4. Вывести корректный список
"""
Дан список, содержащий искажённые данные с должностями и именами сотрудников:
['инженер-конструктор Игорь', 'главный бухгалтер МАРИНА', 'токарь высшего разряда нИКОЛАй', 'директор аэлита']
Известно, что имя сотрудника всегда в конце строки. Сформировать и вывести на экран фразы вида: 'Привет, Игорь!' Подумать, как получить имена сотрудников из элементов списка, как привести их к корректному виду. Можно ли при этом не создавать новый список?
"""

wrong_list = ['инженер-конструктор Игорь', 
              'главный бухгалтер МАРИНА', 
              'токарь высшего разряда нИКОЛАй', 
              'директор аэлита']
for list in wrong_list:
    correct_list = list.split()[-1].capitalize()
    print("Привет", correct_list, "!")



#5 Создать список
"""
5. Создать список, содержащий цены на товары (10–20 товаров), например:
[57.8, 46.51, 97, ...]

Вывести на экран эти цены через запятую в одну строку, цена должна отображаться в виде <r> руб <kk> коп (например «5 руб 04 коп»). Подумать, как из цены получить рубли и копейки, как добавить нули, если, например, получилось 7 копеек или 0 копеек (должно быть 07 коп или 00 коп).
Вывести цены, отсортированные по возрастанию, новый список не создавать (доказать, что объект списка после сортировки остался тот же).
Создать новый список, содержащий те же цены, но отсортированные по убыванию.
Вывести цены пяти самых дорогих товаров. Сможете ли вывести цены этих товаров по возрастанию, написав минимум кода?
"""

# Создаем список цен

incoming_list = [56.7, 35.43, 45, 56.8, 35.44, 46, 56.9, 35.45, 47, 56.10, 35.46, 48, 56.11, 35.47, 49, 56.12, 35.48, 50, 56.13, 35.49]


print(incoming_list)

print()


# Добавляем рубли и копейки

end_word: str = ", "

for i, num in enumerate(incoming_list):

    fix_price = str(f"{float(num):.2f}").split(".")

    if i == len(incoming_list) - 1:
        end_word = "\n"

    print(f"{fix_price[0]} руб {fix_price[1]} коп", end=end_word)


print()
#Выводим цены, отсортированные по возрастанию

print(id(incoming_list))
incoming_list_s = sorted(incoming_list, reverse=False)
print(id(incoming_list_s), type(incoming_list_s))
print(incoming_list_s)

print()
# Создать новый список, содержащий те же цены, но отсортированные по убыванию.

incoming_list = [56.7, 35.43, 45, 56.8, 35.44, 46, 56.9, 35.45, 47, 56.10, 35.46, 48, 56.11, 35.47, 49, 56.12, 35.48, 50, 56.13, 35.49]

print(id(incoming_list))
incoming_list_s = sorted(incoming_list, reverse=True)
print(id(incoming_list_s), type(incoming_list_s))
print(incoming_list_s)

print()
# Выводим 5 самых дорогих цен

print("top five", incoming_list[-6:-1])